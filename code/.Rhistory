# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 5)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 4)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1pb_plot, centers = 4, nstart = 25)
fviz_cluster(kmeans_result, data = g1pb_plot,
main = "K-means Clustering of Districts")
g1pn <- dataPresidential %>% select(1,11,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqNULOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1pn_plot <- g1pn %>% select(-UBIGEO) %>% slice(1:1874) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(5,4,3,2,1)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1pn_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("presidential_null.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 4)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1pn_plot, centers = 4, nstart = 25)
fviz_cluster(kmeans_result, data = g1pn_plot,
main = "K-means Clustering of Districts")
View(regionales)
names(regionales)
g1rb <- regionales %>% select(1,10,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqBLANCOS,
names_prefix = "blank_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
View(g1rb)
View(g1rb)
# Optionally remove UBIGEO for plotting
g1rb_plot <- g1rb %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
View(g1rb_plot)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1rb_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("reg_blank.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1rb_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("reg_blank.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1rb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1rb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 4)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1rb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1rb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 4)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1rb_plot, centers = 4, nstart = 25)
fviz_cluster(kmeans_result, data = g1rb_plot,
main = "K-means Clustering of Districts")
set.seed(123)
kmeans_result <- kmeans(g1rb_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1rb_plot,
main = "K-means Clustering of Districts")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1rb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1rb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1pn_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1pn_plot,
main = "K-means Clustering of Districts")
set.seed(123)
kmeans_result <- kmeans(g1pb_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1pb_plot,
main = "K-means Clustering of Districts")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1cn_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1cn_plot,
main = "K-means Clustering of Districts")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1cn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1cn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Null Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1cb_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1cb_plot,
main = "K-means Clustering of Districts")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1cb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1cb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
names(regionales)
g1rn <- regionales %>% select(1,11,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqNULOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1rn_plot <- g1rn %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
View(g1rn_plot)
View(g1rb_plot)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1rn_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("reg_null.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1rn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1rn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1rn_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1rn_plot,
main = "K-means Clustering of Districts")
View(provinciales)
names(provinciales)
g1pb <- provinciales %>% select(1,10,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqBLANCOS,
names_prefix = "blank_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1pb_plot <- g1rb %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
View(g1pb_plot)
View(g1pb_plot)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1pb_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("prov_blank.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pb_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pb_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
View(g1pb_plot)
View(g1rb_plot)
View(regionales)
View(provinciales)
set.seed(123)
kmeans_result <- kmeans(g1pb_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1pb_plot,
main = "K-means Clustering of Districts")
names(provinciales)
g1pn <- provinciales %>% select(1,11,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqNULOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1pn_plot <- g1pn %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1pn_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("prov_null.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1pn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1pn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1pn_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1pn_plot,
main = "K-means Clustering of Districts")
names(distritales)
g1db <- distritales %>% select(1,10,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqBLANCOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1db_plot <- g1db %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1db_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("dist_blank.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1db_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1db_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Blank Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1db_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1db_plot,
main = "K-means Clustering of Districts")
names(distritales)
g1dn <- distritales %>% select(1,11,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqBLANCOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
g1dn <- distritales %>% select(1,11,13) %>%
mutate(YEAR = as.character(YEAR)) %>%
pivot_wider(
names_from = YEAR,
values_from = FreqNULOS,
names_prefix = "null_"
) %>% mutate(UBIGEO = ifelse(nchar(UBIGEO) == 5, str_pad(UBIGEO, 6, pad = "0"), UBIGEO))
# Optionally remove UBIGEO for plotting
g1dn_plot <- g1dn %>% select(-UBIGEO) %>%
filter(if_all(everything(), ~ is.finite(.))) %>% select(6,5,4,3,2,1)
# Custom function to show correlation coefficients
my_cor <- function(data, mapping, method = "pearson", digits = 2, ...) {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr <- cor(x, y, method = method, use = "complete.obs")
ggally_text(
label = format(corr, digits = digits),
mapping = aes(),
...
) +
theme_void()
}
# Create the plot
ggpairs(
data = g1dn_plot,
lower = list(continuous = wrap("points", alpha = 0.5, size = 1)),
diag = list(continuous = wrap("barDiag", bins = 20)),
upper = list(continuous = wrap(my_cor, method = "pearson"))
)
ggsave("dist_null.jpeg", dpi = 300, width = 8.5, height = 7, units = "in")
# Step 2: Compute distance matrix (Euclidean by default)
dist_matrix <- dist(g1dn_plot, method = "euclidean")
# Step 3: Hierarchical clustering (Ward's method = minimizes within-cluster variance)
hc <- hclust(dist_matrix, method = "ward.D2")
# PCA on the scaled data
pca_result <- prcomp(g1dn_plot)
# Visualise with PCA and colour by hierarchical cluster
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = as.factor(cutree(hc, k = 3)),  # Cluster membership
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster",
title = "District Clusters Based on Null Votes (PCA)")
set.seed(123)
kmeans_result <- kmeans(g1dn_plot, centers = 3, nstart = 25)
fviz_cluster(kmeans_result, data = g1dn_plot,
main = "K-means Clustering of Districts")
